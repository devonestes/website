-readonly ||= false
-solution_user_user_track = UserTrack.where(user: @solution.user, track: @solution.exercise.track).first

.comments-section
  %h2 Community comments
  .h2-subtitle See what others have said about this solution

  -if @solution.comments.size > 0
    .comments
      -@solution.comments.each do |comment|
        =solution_comment_widget(comment, @solution)
  -else
    .comments{style: "display:none"}

  -unless readonly
    .new-editable-text
      =form_for SolutionComment.new, url: solution_comments_path(@solution), remote: true do |f|
        =hidden_field_tag :solution_id, @solution.id

        .tabs-and-panes.selected-1
          .tabs
            .tab.tab-1.write-tab{data: {tab: "markdown"}} Write
            .tab.tab-2.preview-tab{data: {tab: "preview"}} Preview
          .panes
            .pane.pane-1.markdown
              =f.text_area :content, required: true
            .pane.pane-2.preview
              .preview-area

        =button_tag "Comment", class: "comment-button js-disable-on-click pure-button #{@solution.approved?? "faded" : ""}"

-content_for :js do
  :javascript
    window.setupNewEditableText('solutionComment-' + #{@solution.id})
